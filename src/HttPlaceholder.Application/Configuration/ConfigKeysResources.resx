<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="ApiUsername" xml:space="preserve">
        <value>the username for securing the REST API</value>
    </data>
    <data name="ApiPassword" xml:space="preserve">
        <value>the password for securing the REST API</value>
    </data>
    <data name="HttpsPort" xml:space="preserve">
        <value>the port HttPlaceholder should run under when HTTPS is enabled. Listen on multiple ports by separating ports with comma.</value>
    </data>
    <data name="InputFile" xml:space="preserve">
        <value>for input file, you can both provide a path to a .yml file (to load only that file) or provide a path to a folder containing .yml files (which will all be loaded in that case).</value>
    </data>
    <data name="DisableFileWatcher" xml:space="preserve">
        <value>by default, the OS file watcher will be used to keep track of the .yml stub files. If a problem occurs with the file watcher, you can enable this option to read and track the .yml stub files in the 'classic' way (default false).</value>
    </data>
    <data name="OldRequestsQueueLength" xml:space="preserve">
        <value>the maximum number of HTTP requests that the in memory stub source (used for the REST API) should store before truncating old records. Default: 40.</value>
    </data>
    <data name="StoreResponses" xml:space="preserve">
        <value>whether the responses as returned by HttPlaceholder should be stored. Default: false</value>
    </data>
    <data name="CleanOldRequestsInBackgroundJob" xml:space="preserve">
        <value>whether the cleaning of old requests should be done in a background job. If set to true, will delete old requests in a background job that runs once in 5 minutes. If set to false, will clean old requests every time a request is handled. Default: true.</value>
    </data>
    <data name="PfxPassword" xml:space="preserve">
        <value>the password for the .pfx file which should be used in the case HTTPS is enabled</value>
    </data>
    <data name="ReadProxyHeaders" xml:space="preserve">
        <value>whether the proxy headers 'X-Forwarded-For', 'X-Forwarded-Host' and 'X-Forwarded-Proto' should be taken into account when determining the IP, hostname and protocol</value>
    </data>
    <data name="SafeProxyIps" xml:space="preserve">
        <value>the proxy IPs which are considered safe when reading the 'X-Forwarded-For', 'X-Forwarded-Host' and 'X-Forwarded-Proto' headers. Localhost is always permitted. Separate multiple IPs by using a comma.</value>
    </data>
    <data name="PfxPath" xml:space="preserve">
        <value>the path to the .pfx file in the case HTTPS is enabled. When no path is provided, the default .pfx file is used</value>
    </data>
    <data name="Port" xml:space="preserve">
        <value>the HTTP port HttPlaceholder should run under. Listen on multiple ports by separating ports with comma.</value>
    </data>
    <data name="UseHttps" xml:space="preserve">
        <value>whether HTTPS should be enabled or not. Default: false</value>
    </data>
    <data name="PublicUrl" xml:space="preserve">
        <value>specifies the URL on which this HttPlaceholder instance can be reached. Useful if running behind a reverse proxy.</value>
    </data>
    <data name="EnableRequestLogging" xml:space="preserve">
        <value>whether stub requests should be logged to the terminal window. Default: false</value>
    </data>
    <data name="FileStorageLocation" xml:space="preserve">
        <value>a location where the stubs and requests are stored. This is enabled by default and, if you omit this property, the stubs will be saved in your user profile folder. Specify 'useInMemoryStorage' to only save stubs in memory.</value>
    </data>
    <data name="UseInMemoryStorage" xml:space="preserve">
        <value>whether stubs should only be saved in memory. The stubs and requests will be deleted after restarting the application. Default: false</value>
    </data>
    <data name="MysqlConnectionString" xml:space="preserve">
        <value>a connection string that needs to be filled in if you want to use MySQL</value>
    </data>
    <data name="SqliteConnectionString" xml:space="preserve">
        <value>a connection string that needs to be filled in if you want to use SQLite</value>
    </data>
    <data name="SqlServerConnectionString" xml:space="preserve">
        <value>connection string that needs to be filled in if you want to use MSSQL</value>
    </data>
    <data name="PostrgresConnectionString" xml:space="preserve">
        <value>a connection string that needs to be filled in if you want to use Postgres</value>
    </data>
    <data name="EnableUserInterface" xml:space="preserve">
        <value>whether the user interface should be enabled or not. The user interface is, if enabled, located at http://localhost:PORT/ph-ui.</value>
    </data>
    <data name="MaximumExtraDurationMillis" xml:space="preserve">
        <value>the number of milliseconds the 'extraDuration' response writer can make a request wait at most. Defaults to 1 minute (60.000 millis).</value>
    </data>
    <data name="HealthcheckOnRootUrl" xml:space="preserve">
        <value>whether the root URL of HttPlaceholder (so "/") can be configured as stub or always returns 200 OK. Defaults to false.</value>
    </data>
    <data name="AllowGlobalFileSearch" xml:space="preserve">
        <value>whether HttPlaceholder is able to accept any path for the 'file response writer'. If set to false, HttPlaceholder is only allowed to look for files relative to the .yml stub files or the file storage location. 'false' by default and not recommended to set to 'true' if you are running HttPlaceholder outside of a Docker container.</value>
    </data>
    <data name="ConfigJsonLocation" xml:space="preserve">
        <value>the location of the config.json file. This JSON file contains all possible configuration settings and a default value per setting. You can copy this file to any location on your PC. Don't put the config file in the installation folder, because these files will be overwritten when an update is installed.</value>
    </data>
</root>
